{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { defineCustomEventTarget, Event } from 'event-target-shim';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { addListener, removeListener } from \"./EventEmitter\";\nimport Logger from \"./Logger\";\nimport { deepClone } from \"./RTCUtil\";\nvar log = new Logger('pc');\nvar WebRTCModule = NativeModules.WebRTCModule;\nvar MEDIA_STREAM_TRACK_EVENTS = ['ended', 'mute', 'unmute'];\nvar MediaStreamTrack = function (_defineCustomEventTar) {\n  function MediaStreamTrack(info) {\n    var _this;\n    _classCallCheck(this, MediaStreamTrack);\n    _this = _callSuper(this, MediaStreamTrack);\n    _defineProperty(_this, \"_constraints\", void 0);\n    _defineProperty(_this, \"_enabled\", void 0);\n    _defineProperty(_this, \"_settings\", void 0);\n    _defineProperty(_this, \"_muted\", void 0);\n    _defineProperty(_this, \"_peerConnectionId\", void 0);\n    _defineProperty(_this, \"_readyState\", void 0);\n    _defineProperty(_this, \"id\", void 0);\n    _defineProperty(_this, \"kind\", void 0);\n    _defineProperty(_this, \"label\", '');\n    _defineProperty(_this, \"remote\", void 0);\n    _this._constraints = info.constraints || {};\n    _this._enabled = info.enabled;\n    _this._settings = info.settings || {};\n    _this._muted = false;\n    _this._peerConnectionId = info.peerConnectionId;\n    _this._readyState = info.readyState;\n    _this.id = info.id;\n    _this.kind = info.kind;\n    _this.remote = info.remote;\n    if (!_this.remote) {\n      _this._registerEvents();\n    }\n    return _this;\n  }\n  _inherits(MediaStreamTrack, _defineCustomEventTar);\n  return _createClass(MediaStreamTrack, [{\n    key: \"enabled\",\n    get: function get() {\n      return this._enabled;\n    },\n    set: function set(enabled) {\n      if (enabled === this._enabled) {\n        return;\n      }\n      WebRTCModule.mediaStreamTrackSetEnabled(this.id, !this._enabled);\n      this._enabled = !this._enabled;\n    }\n  }, {\n    key: \"muted\",\n    get: function get() {\n      return this._muted;\n    }\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return this._readyState;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      WebRTCModule.mediaStreamTrackSetEnabled(this.id, false);\n      this._readyState = 'ended';\n    }\n  }, {\n    key: \"_switchCamera\",\n    value: function _switchCamera() {\n      if (this.remote) {\n        throw new Error('Not implemented for remote tracks');\n      }\n      if (this.kind !== 'video') {\n        throw new Error('Only implemented for video tracks');\n      }\n      WebRTCModule.mediaStreamTrackSwitchCamera(this.id);\n    }\n  }, {\n    key: \"_setVideoEffect\",\n    value: function _setVideoEffect(name) {\n      if (this.remote) {\n        throw new Error('Not implemented for remote tracks');\n      }\n      if (this.kind !== 'video') {\n        throw new Error('Only implemented for video tracks');\n      }\n      WebRTCModule.mediaStreamTrackSetVideoEffect(this.id, name);\n    }\n  }, {\n    key: \"_setMutedInternal\",\n    value: function _setMutedInternal(muted) {\n      if (!this.remote) {\n        throw new Error('Track is not remote!');\n      }\n      this._muted = muted;\n      this.dispatchEvent(new Event(muted ? 'mute' : 'unmute'));\n    }\n  }, {\n    key: \"applyConstraints\",\n    value: function applyConstraints() {\n      throw new Error('Not implemented.');\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      throw new Error('Not implemented.');\n    }\n  }, {\n    key: \"getCapabilities\",\n    value: function getCapabilities() {\n      throw new Error('Not implemented.');\n    }\n  }, {\n    key: \"getConstraints\",\n    value: function getConstraints() {\n      return deepClone(this._constraints);\n    }\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return deepClone(this._settings);\n    }\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents() {\n      var _this2 = this;\n      addListener(this, 'mediaStreamTrackEnded', function (ev) {\n        if (ev.trackId !== _this2.id || _this2._readyState === 'ended') {\n          return;\n        }\n        log.debug(_this2.id + \" mediaStreamTrackEnded\");\n        _this2._readyState = 'ended';\n        _this2.dispatchEvent(new Event('ended'));\n      });\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      removeListener(this);\n      WebRTCModule.mediaStreamTrackRelease(this.id);\n    }\n  }]);\n}(defineCustomEventTarget.apply(void 0, MEDIA_STREAM_TRACK_EVENTS));\nexport default MediaStreamTrack;","map":{"version":3,"names":["defineCustomEventTarget","Event","NativeModules","addListener","removeListener","Logger","deepClone","log","WebRTCModule","MEDIA_STREAM_TRACK_EVENTS","MediaStreamTrack","_defineCustomEventTar","info","_this","_classCallCheck","_callSuper","_defineProperty","_constraints","constraints","_enabled","enabled","_settings","settings","_muted","_peerConnectionId","peerConnectionId","_readyState","readyState","id","kind","remote","_registerEvents","_inherits","_createClass","key","get","set","mediaStreamTrackSetEnabled","value","stop","_switchCamera","Error","mediaStreamTrackSwitchCamera","_setVideoEffect","name","mediaStreamTrackSetVideoEffect","_setMutedInternal","muted","dispatchEvent","applyConstraints","clone","getCapabilities","getConstraints","getSettings","_this2","ev","trackId","debug","release","mediaStreamTrackRelease","apply"],"sources":["/workspaces/smpm-with-webrtc/node_modules/react-native-webrtc/lib/module/MediaStreamTrack.ts"],"sourcesContent":["\nimport { defineCustomEventTarget, Event } from 'event-target-shim';\nimport { NativeModules } from 'react-native';\n\nimport { addListener, removeListener } from './EventEmitter';\nimport Logger from './Logger';\nimport { deepClone } from './RTCUtil';\n\nconst log = new Logger('pc');\nconst { WebRTCModule } = NativeModules;\n\nconst MEDIA_STREAM_TRACK_EVENTS = [ 'ended', 'mute', 'unmute' ];\n\ntype MediaStreamTrackState = 'live' | 'ended';\n\nclass MediaStreamTrack extends defineCustomEventTarget(...MEDIA_STREAM_TRACK_EVENTS) {\n    _constraints: object;\n    _enabled: boolean;\n    _settings: object;\n    _muted: boolean;\n    _peerConnectionId: number;\n    _readyState: MediaStreamTrackState;\n\n    readonly id: string;\n    readonly kind: string;\n    readonly label: string = '';\n    readonly remote: boolean;\n\n    constructor(info) {\n        super();\n\n        this._constraints = info.constraints || {};\n        this._enabled = info.enabled;\n        this._settings = info.settings || {};\n        this._muted = false;\n        this._peerConnectionId = info.peerConnectionId;\n        this._readyState = info.readyState;\n\n        this.id = info.id;\n        this.kind = info.kind;\n        this.remote = info.remote;\n\n        if (!this.remote) {\n            this._registerEvents();\n        }\n    }\n\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    set enabled(enabled: boolean) {\n        if (enabled === this._enabled) {\n            return;\n        }\n\n        WebRTCModule.mediaStreamTrackSetEnabled(this.id, !this._enabled);\n        this._enabled = !this._enabled;\n    }\n\n    get muted(): boolean {\n        return this._muted;\n    }\n\n    get readyState(): string {\n        return this._readyState;\n    }\n\n    stop(): void {\n        WebRTCModule.mediaStreamTrackSetEnabled(this.id, false);\n        this._readyState = 'ended';\n        // TODO: save some stopped flag?\n    }\n\n    /**\n     * Private / custom API for switching the cameras on the fly, without the\n     * need for adding / removing tracks or doing any SDP renegotiation.\n     *\n     * This is how the reference application (AppRTCMobile) implements camera\n     * switching.\n     */\n    _switchCamera(): void {\n        if (this.remote) {\n            throw new Error('Not implemented for remote tracks');\n        }\n\n        if (this.kind !== 'video') {\n            throw new Error('Only implemented for video tracks');\n        }\n\n        WebRTCModule.mediaStreamTrackSwitchCamera(this.id);\n    }\n\n    _setVideoEffect(name:string) {\n        if (this.remote) {\n            throw new Error('Not implemented for remote tracks');\n        }\n\n        if (this.kind !== 'video') {\n            throw new Error('Only implemented for video tracks');\n        }\n\n        WebRTCModule.mediaStreamTrackSetVideoEffect(this.id, name);\n    }\n\n    /**\n     * Internal function which is used to set the muted state on remote tracks and\n     * emit the mute / unmute event.\n     *\n     * @param muted Whether the track should be marked as muted / unmuted.\n     */\n    _setMutedInternal(muted: boolean) {\n        if (!this.remote) {\n            throw new Error('Track is not remote!');\n        }\n\n        this._muted = muted;\n        this.dispatchEvent(new Event(muted ? 'mute' : 'unmute'));\n    }\n\n    applyConstraints(): never {\n        throw new Error('Not implemented.');\n    }\n\n    clone(): never {\n        throw new Error('Not implemented.');\n    }\n\n    getCapabilities(): never {\n        throw new Error('Not implemented.');\n    }\n\n    getConstraints() {\n        return deepClone(this._constraints);\n    }\n\n    getSettings() {\n        return deepClone(this._settings);\n    }\n\n\n    _registerEvents(): void {\n        addListener(this, 'mediaStreamTrackEnded', (ev: any) => {\n            if (ev.trackId !== this.id || this._readyState === 'ended') {\n                return;\n            }\n\n            log.debug(`${this.id} mediaStreamTrackEnded`);\n            this._readyState = 'ended';\n\n            // @ts-ignore\n            this.dispatchEvent(new Event('ended'));\n        });\n    }\n\n    release(): void {\n        removeListener(this);\n        WebRTCModule.mediaStreamTrackRelease(this.id);\n    }\n}\n\nexport default MediaStreamTrack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}