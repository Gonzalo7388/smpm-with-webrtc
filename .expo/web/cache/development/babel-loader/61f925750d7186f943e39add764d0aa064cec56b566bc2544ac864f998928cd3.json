{"ast":null,"code":"import _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport RTCRtpEncodingParameters from \"./RTCRtpEncodingParameters\";\nimport RTCRtpParameters from \"./RTCRtpParameters\";\nvar DegradationPreference = function () {\n  function DegradationPreference() {\n    _classCallCheck(this, DegradationPreference);\n  }\n  return _createClass(DegradationPreference, null, [{\n    key: \"fromNative\",\n    value: function fromNative(nativeFormat) {\n      var stringFormat = nativeFormat.toLowerCase().replace('_', '-');\n      return stringFormat;\n    }\n  }, {\n    key: \"toNative\",\n    value: function toNative(format) {\n      return format.toUpperCase().replace('-', '_');\n    }\n  }]);\n}();\nvar RTCRtpSendParameters = function (_RTCRtpParameters) {\n  function RTCRtpSendParameters(init) {\n    var _this;\n    _classCallCheck(this, RTCRtpSendParameters);\n    _this = _callSuper(this, RTCRtpSendParameters, [init]);\n    _defineProperty(_this, \"transactionId\", void 0);\n    _defineProperty(_this, \"encodings\", void 0);\n    _defineProperty(_this, \"degradationPreference\", void 0);\n    _this.transactionId = init.transactionId;\n    _this.encodings = [];\n    _this.degradationPreference = init.degradationPreference ? DegradationPreference.fromNative(init.degradationPreference) : null;\n    for (var enc of init.encodings) {\n      _this.encodings.push(new RTCRtpEncodingParameters(enc));\n    }\n    return _this;\n  }\n  _inherits(RTCRtpSendParameters, _RTCRtpParameters);\n  return _createClass(RTCRtpSendParameters, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = _superPropGet(RTCRtpSendParameters, \"toJSON\", this, 3)([]);\n      obj['transactionId'] = this.transactionId;\n      obj['encodings'] = this.encodings.map(function (e) {\n        return e.toJSON();\n      });\n      if (this.degradationPreference !== null) {\n        obj['degradationPreference'] = DegradationPreference.toNative(this.degradationPreference);\n      }\n      return obj;\n    }\n  }]);\n}(RTCRtpParameters);\nexport { RTCRtpSendParameters as default };","map":{"version":3,"names":["RTCRtpEncodingParameters","RTCRtpParameters","DegradationPreference","_classCallCheck","_createClass","key","value","fromNative","nativeFormat","stringFormat","toLowerCase","replace","toNative","format","toUpperCase","RTCRtpSendParameters","_RTCRtpParameters","init","_this","_callSuper","_defineProperty","transactionId","encodings","degradationPreference","enc","push","_inherits","toJSON","obj","_superPropGet","map","e","default"],"sources":["/workspaces/smpm-with-webrtc/node_modules/react-native-webrtc/lib/module/RTCRtpSendParameters.ts"],"sourcesContent":["import RTCRtpEncodingParameters, { RTCRtpEncodingParametersInit } from './RTCRtpEncodingParameters';\nimport RTCRtpParameters, { RTCRtpParametersInit } from './RTCRtpParameters';\n\ntype DegradationPreferenceType = 'maintain-framerate'\n    | 'maintain-resolution'\n    | 'balanced'\n    | 'disabled'\n\n\n/**\n * Class to convert degradation preference format. Native has a format such as\n * MAINTAIN_FRAMERATE whereas the web APIs expect maintain-framerate\n */\nclass DegradationPreference {\n    static fromNative(nativeFormat: string): DegradationPreferenceType {\n        const stringFormat = nativeFormat.toLowerCase().replace('_', '-');\n\n        return stringFormat as DegradationPreferenceType;\n    }\n\n    static toNative(format: DegradationPreferenceType): string {\n        return format.toUpperCase().replace('-', '_');\n    }\n}\n\nexport interface RTCRtpSendParametersInit extends RTCRtpParametersInit {\n    transactionId: string;\n    encodings: RTCRtpEncodingParametersInit[];\n    degradationPreference?: string;\n}\n\nexport default class RTCRtpSendParameters extends RTCRtpParameters {\n    readonly transactionId: string;\n    readonly encodings: RTCRtpEncodingParameters[];\n    degradationPreference: DegradationPreferenceType | null;\n\n    constructor(init: RTCRtpSendParametersInit) {\n        super(init);\n\n        this.transactionId = init.transactionId;\n        this.encodings = [];\n        this.degradationPreference = init.degradationPreference ?\n            DegradationPreference.fromNative(init.degradationPreference) : null;\n\n        for (const enc of init.encodings) {\n            this.encodings.push(new RTCRtpEncodingParameters(enc));\n        }\n    }\n\n    toJSON(): RTCRtpSendParametersInit {\n        const obj = super.toJSON();\n\n        obj['transactionId'] = this.transactionId;\n\n        obj['encodings'] = this.encodings.map(e => e.toJSON());\n\n        if (this.degradationPreference !== null) {\n            obj['degradationPreference'] = DegradationPreference.toNative(this.degradationPreference);\n        }\n\n        return obj as RTCRtpSendParametersInit;\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,wBAAP;AACA,OAAOC,gBAAP;AAAA,IAYMC,qBAAN;EAAA,SAAAA,sBAAA;IAAAC,eAAA,OAAAD,qBAAA;EAAA;EAAA,OAAAE,YAAA,CAAAF,qBAAA;IAAAG,GAAA;IAAAC,KAAA,EACqB,SAAVC,UAAUA,CAACC,YAAD,EAAkD;MAC/D,IAAMC,YAAY,GAAGD,YAAY,CAACE,WAAb,GAA2BC,OAA3B,CAAmC,GAAnC,EAAwC,GAAxC,CAArB;MAEA,OAAOF,YAAP;IACH;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EAEc,SAARM,QAAQA,CAACC,MAAD,EAA4C;MACvD,OAAOA,MAAM,CAACC,WAAP,GAAqBH,OAArB,CAA6B,GAA7B,EAAkC,GAAlC,CAAP;IACH;EAAA;AAAA;AAAA,IASgBI,oBAAN,aAAAC,iBAAA;EAKX,SAAAD,qBAAYE,IAAD,EAAiC;IAAA,IAAAC,KAAA;IAAAf,eAAA,OAAAY,oBAAA;IACxCG,KAAA,GAAAC,UAAA,OAAAJ,oBAAA,GAAME,IAAN;IADwCG,eAAA,CAAAF,KAAA;IAAAE,eAAA,CAAAF,KAAA;IAAAE,eAAA,CAAAF,KAAA;IAGxCA,KAAA,CAAKG,aAAL,GAAqBJ,IAAI,CAACI,aAA1B;IACAH,KAAA,CAAKI,SAAL,GAAiB,EAAjB;IACAJ,KAAA,CAAKK,qBAAL,GAA6BN,IAAI,CAACM,qBAAL,GACzBrB,qBAAqB,CAACK,UAAtB,CAAiCU,IAAI,CAACM,qBAAtC,CADyB,GACsC,IADnE;IAGA,KAAK,IAAMC,GAAX,IAAkBP,IAAI,CAACK,SAAvB,EAAkC;MAC9BJ,KAAA,CAAKI,SAAL,CAAeG,IAAf,CAAoB,IAAIzB,wBAAJ,CAA6BwB,GAA7B,CAApB;IACH;IAAA,OAAAN,KAAA;EACJ;EAAAQ,SAAA,CAAAX,oBAAA,EAAAC,iBAAA;EAAA,OAAAZ,YAAA,CAAAW,oBAAA;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAqB,MAAMA,CAAA,EAA6B;MAC/B,IAAMC,GAAG,GAAAC,aAAA,CAAAd,oBAAA,wBAAT;MAEAa,GAAG,CAAC,eAAD,CAAH,GAAuB,KAAKP,aAA5B;MAEAO,GAAG,CAAC,WAAD,CAAH,GAAmB,KAAKN,SAAL,CAAeQ,GAAf,CAAmB,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACJ,MAAF,EAAxB;MAAA,EAAnB;MAEA,IAAI,KAAKJ,qBAAL,KAA+B,IAAnC,EAAyC;QACrCK,GAAG,CAAC,uBAAD,CAAH,GAA+B1B,qBAAqB,CAACU,QAAtB,CAA+B,KAAKW,qBAApC,CAA/B;MACH;MAED,OAAOK,GAAP;IACH;EAAA;AAAA,EA9B6C3B,gBAAnC;AAAA,SAAMc,oBAAN,IAAAiB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}