{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport RTCEvent from \"./RTCEvent\";\nvar RTCErrorEvent = function (_RTCEvent) {\n  function RTCErrorEvent(type, func, message) {\n    var _this;\n    _classCallCheck(this, RTCErrorEvent);\n    _this = _callSuper(this, RTCErrorEvent, [type]);\n    _defineProperty(_this, \"func\", void 0);\n    _defineProperty(_this, \"message\", void 0);\n    _this.func = func;\n    _this.message = message;\n    return _this;\n  }\n  _inherits(RTCErrorEvent, _RTCEvent);\n  return _createClass(RTCErrorEvent);\n}(RTCEvent);\nexport { RTCErrorEvent as default };","map":{"version":3,"names":["RTCEvent","RTCErrorEvent","_RTCEvent","type","func","message","_this","_classCallCheck","_callSuper","_defineProperty","_inherits","_createClass","default"],"sources":["/workspaces/smpm-with-webrtc/node_modules/react-native-webrtc/lib/module/RTCErrorEvent.ts"],"sourcesContent":["import RTCEvent from './RTCEvent';\n\ntype RTCPeerConnectionErrorFunc =\n    | 'addTransceiver'\n    | 'getTransceivers'\n    | 'addTrack'\n    | 'removeTrack';\n\n/**\n * @brief This class Represents internal error happening on the native side as\n * part of asynchronous invocations to synchronous web APIs.\n */\nexport default class RTCErrorEvent extends RTCEvent {\n    readonly func: RTCPeerConnectionErrorFunc;\n    readonly message: string;\n    constructor(type: string, func: RTCPeerConnectionErrorFunc, message: string) {\n        super(type);\n        this.func = func;\n        this.message = message;\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,QAAP;AAAA,IAYqBC,aAAN,aAAAC,SAAA;EAGX,SAAAD,cAAYE,IAAD,EAAeC,IAAf,EAAiDC,OAAjD,EAAkE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,aAAA;IACzEK,KAAA,GAAAE,UAAA,OAAAP,aAAA,GAAME,IAAN;IADyEM,eAAA,CAAAH,KAAA;IAAAG,eAAA,CAAAH,KAAA;IAEzEA,KAAA,CAAKF,IAAL,GAAYA,IAAZ;IACAE,KAAA,CAAKD,OAAL,GAAeA,OAAf;IAAA,OAAAC,KAAA;EACH;EAAAI,SAAA,CAAAT,aAAA,EAAAC,SAAA;EAAA,OAAAS,YAAA,CAAAV,aAAA;AAAA,EAPsCD,QAA5B;AAAA,SAAMC,aAAN,IAAAW,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}