{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar WebRTCModule = NativeModules.WebRTCModule;\nvar Permissions = function () {\n  function Permissions() {\n    _classCallCheck(this, Permissions);\n    _defineProperty(this, \"RESULT\", {\n      DENIED: 'denied',\n      GRANTED: 'granted',\n      PROMPT: 'prompt'\n    });\n    _defineProperty(this, \"VALID_PERMISSIONS\", ['camera', 'microphone']);\n    _defineProperty(this, \"_lastReq\", Promise.resolve());\n  }\n  return _createClass(Permissions, [{\n    key: \"_requestPermissionAndroid\",\n    value: function _requestPermissionAndroid(perm) {\n      return new Promise(function (resolve) {\n        PermissionsAndroid.request(perm).then(function (granted) {\n          return resolve(granted === PermissionsAndroid.RESULTS.GRANTED);\n        }, function () {\n          return resolve(false);\n        });\n      });\n    }\n  }, {\n    key: \"_validatePermissionDescriptior\",\n    value: function _validatePermissionDescriptior(permissionDesc) {\n      if (typeof permissionDesc !== 'object') {\n        throw new TypeError('Argument 1 of Permissions.query is not an object.');\n      }\n      if (typeof permissionDesc.name === 'undefined') {\n        throw new TypeError('Missing required \\'name\\' member of PermissionDescriptor.');\n      }\n      if (this.VALID_PERMISSIONS.indexOf(permissionDesc.name) === -1) {\n        throw new TypeError('\\'name\\' member of PermissionDescriptor is not a valid value for enumeration PermissionName.');\n      }\n    }\n  }, {\n    key: \"query\",\n    value: function query(permissionDesc) {\n      var _this = this;\n      try {\n        this._validatePermissionDescriptior(permissionDesc);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      if (Platform.OS === 'android') {\n        var perm = permissionDesc.name === 'camera' ? PermissionsAndroid.PERMISSIONS.CAMERA : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n        return new Promise(function (resolve) {\n          PermissionsAndroid.check(perm).then(function (granted) {\n            return resolve(granted ? _this.RESULT.GRANTED : _this.RESULT.PROMPT);\n          }, function () {\n            return resolve(_this.RESULT.PROMPT);\n          });\n        });\n      } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n        return WebRTCModule.checkPermission(permissionDesc.name);\n      } else {\n        return Promise.reject(new TypeError('Unsupported platform.'));\n      }\n    }\n  }, {\n    key: \"request\",\n    value: function request(permissionDesc) {\n      var _this2 = this;\n      try {\n        this._validatePermissionDescriptior(permissionDesc);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      if (Platform.OS === 'android') {\n        var perm = permissionDesc.name === 'camera' ? PermissionsAndroid.PERMISSIONS.CAMERA : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n        var requestPermission = function requestPermission() {\n          return _this2._requestPermissionAndroid(perm);\n        };\n        this._lastReq = this._lastReq.then(requestPermission, requestPermission);\n        return this._lastReq;\n      } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n        return WebRTCModule.requestPermission(permissionDesc.name);\n      } else {\n        return Promise.reject(new TypeError('Unsupported platform.'));\n      }\n    }\n  }]);\n}();\nexport default new Permissions();","map":{"version":3,"names":["WebRTCModule","NativeModules","Permissions","_classCallCheck","_defineProperty","DENIED","GRANTED","PROMPT","Promise","resolve","_createClass","key","value","_requestPermissionAndroid","perm","PermissionsAndroid","request","then","granted","RESULTS","_validatePermissionDescriptior","permissionDesc","TypeError","name","VALID_PERMISSIONS","indexOf","query","_this","e","reject","Platform","OS","PERMISSIONS","CAMERA","RECORD_AUDIO","check","RESULT","checkPermission","_this2","requestPermission","_lastReq"],"sources":["/workspaces/smpm-with-webrtc/node_modules/react-native-webrtc/lib/module/Permissions.ts"],"sourcesContent":["\nimport { NativeModules, Permission, PermissionsAndroid, Platform } from 'react-native';\n\nconst { WebRTCModule } = NativeModules;\n\n/**\n * Type declaration for a permissions descriptor.\n */\ntype PermissionDescriptor = {\n    name: string;\n};\n\n/**\n * Class implementing a subset of W3C's Permissions API as defined by:\n * https://www.w3.org/TR/permissions/\n */\nclass Permissions {\n    /**\n     * Possible result values for {@link query}, in accordance with:\n     * https://www.w3.org/TR/permissions/#status-of-a-permission\n     */\n    RESULT = {\n        DENIED: 'denied',\n        GRANTED: 'granted',\n        PROMPT: 'prompt'\n    };\n\n    /**\n     * This implementation only supports requesting these permissions, a subset\n     * of: https://www.w3.org/TR/permissions/#permission-registry\n     */\n    VALID_PERMISSIONS = [ 'camera', 'microphone' ];\n\n    _lastReq: Promise<unknown> = Promise.resolve();\n\n    /**\n     * Helper for requesting Android permissions. On Android only one permission\n     * can be requested at a time (unless the multi-permission API is used,\n     * but we are not using that for symmetry with the W3C API for querying)\n     * so we'll queue them up.\n     *\n     * @param perm - The requested permission from\n     * {@link PermissionsAndroid.PERMISSIONS}\n     * https://facebook.github.io/react-native/docs/permissionsandroid#permissions-that-require-prompting-the-user\n     */\n    _requestPermissionAndroid(perm: Permission) {\n        return new Promise(resolve => {\n            PermissionsAndroid.request(perm).then(\n                granted => resolve(granted === PermissionsAndroid.RESULTS.GRANTED),\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Validates the given permission descriptor.\n     */\n    _validatePermissionDescriptior(permissionDesc) {\n        if (typeof permissionDesc !== 'object') {\n            throw new TypeError('Argument 1 of Permissions.query is not an object.');\n        }\n\n        if (typeof permissionDesc.name === 'undefined') {\n            throw new TypeError('Missing required \\'name\\' member of PermissionDescriptor.');\n        }\n\n        if (this.VALID_PERMISSIONS.indexOf(permissionDesc.name) === -1) {\n            throw new TypeError(\n                '\\'name\\' member of PermissionDescriptor is not a valid value for enumeration PermissionName.'\n            );\n        }\n    }\n\n    /**\n     * Method for querying the status of a permission, according to:\n     * https://www.w3.org/TR/permissions/#permissions-interface\n     */\n    query(permissionDesc: PermissionDescriptor) {\n        try {\n            this._validatePermissionDescriptior(permissionDesc);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n\n        if (Platform.OS === 'android') {\n            const perm =\n                permissionDesc.name === 'camera'\n                    ? PermissionsAndroid.PERMISSIONS.CAMERA\n                    : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n\n            return new Promise(resolve => {\n                PermissionsAndroid.check(perm).then(\n                    granted => resolve(granted ? this.RESULT.GRANTED : this.RESULT.PROMPT),\n                    () => resolve(this.RESULT.PROMPT)\n                );\n            });\n        } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n            return WebRTCModule.checkPermission(permissionDesc.name);\n        } else {\n            return Promise.reject(new TypeError('Unsupported platform.'));\n        }\n    }\n\n    /**\n     * Custom method NOT defined by W3C's permissions API, which allows the\n     * caller to request a permission.\n     */\n    request(permissionDesc: PermissionDescriptor) {\n        try {\n            this._validatePermissionDescriptior(permissionDesc);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n\n        if (Platform.OS === 'android') {\n            const perm =\n                permissionDesc.name === 'camera'\n                    ? PermissionsAndroid.PERMISSIONS.CAMERA\n                    : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n            const requestPermission = () => this._requestPermissionAndroid(perm);\n\n            this._lastReq = this._lastReq.then(requestPermission, requestPermission);\n\n            return this._lastReq;\n        } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n            return WebRTCModule.requestPermission(permissionDesc.name);\n        } else {\n            return Promise.reject(new TypeError('Unsupported platform.'));\n        }\n    }\n}\n\nexport default new Permissions();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}